[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "ContentType",
        "importPath": "django.contrib.contenttypes.models",
        "description": "django.contrib.contenttypes.models",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.models",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "GenericForeignKey",
        "importPath": "django.contrib.contenttypes.fields",
        "description": "django.contrib.contenttypes.fields",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.fields",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http.request",
        "description": "django.http.request",
        "isExtraImport": true,
        "detail": "django.http.request",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "format_html",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "urlencode",
        "importPath": "django.utils.html",
        "description": "django.utils.html",
        "isExtraImport": true,
        "detail": "django.utils.html",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "Collection",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "store.models",
        "description": "store.models",
        "isExtraImport": true,
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "routers",
        "importPath": "rest_framework_nested",
        "description": "rest_framework_nested",
        "isExtraImport": true,
        "detail": "rest_framework_nested",
        "documentation": {}
    },
    {
        "label": "SimpleRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "pprint",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "importPath": "playground.urls",
        "description": "playground.urls",
        "isExtraImport": true,
        "detail": "playground.urls",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "ListModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "CreateModelMixin",
        "importPath": "rest_framework.mixins",
        "description": "rest_framework.mixins",
        "isExtraImport": true,
        "detail": "rest_framework.mixins",
        "documentation": {}
    },
    {
        "label": "ListCreateAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "RetrieveUpdateDestroyAPIView",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "ModelViewSet",
        "importPath": "rest_framework.viewsets",
        "description": "rest_framework.viewsets",
        "isExtraImport": true,
        "detail": "rest_framework.viewsets",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "GenericTabularInline",
        "importPath": "django.contrib.contenttypes.admin",
        "description": "django.contrib.contenttypes.admin",
        "isExtraImport": true,
        "detail": "django.contrib.contenttypes.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "importPath": "store.admin",
        "description": "store.admin",
        "isExtraImport": true,
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "importPath": "tags.models",
        "description": "tags.models",
        "isExtraImport": true,
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "likes.migrations.0001_initial",
        "description": "likes.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('contenttypes', '0002_remove_content_type_name'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='LikedItem',\n            fields=[",
        "detail": "likes.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "LikesConfig",
        "kind": 6,
        "importPath": "likes.apps",
        "description": "likes.apps",
        "peekOfCode": "class LikesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'likes'",
        "detail": "likes.apps",
        "documentation": {}
    },
    {
        "label": "LikedItem",
        "kind": 6,
        "importPath": "likes.models",
        "description": "likes.models",
        "peekOfCode": "class LikedItem(models.Model):\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey('content_type', 'object_id')",
        "detail": "likes.models",
        "documentation": {}
    },
    {
        "label": "PlaygroundConfig",
        "kind": 6,
        "importPath": "playground.apps",
        "description": "playground.apps",
        "peekOfCode": "class PlaygroundConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'playground'",
        "detail": "playground.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "playground.urls",
        "description": "playground.urls",
        "peekOfCode": "urlpatterns = [\n    path('hello/', views.say_hello)\n]",
        "detail": "playground.urls",
        "documentation": {}
    },
    {
        "label": "say_hello",
        "kind": 2,
        "importPath": "playground.views",
        "description": "playground.views",
        "peekOfCode": "def say_hello(request):\n    # return HttpResponse(\"Hello World\")\n    return render(request, \"hello.html\", {\"name\": \"Django\"})",
        "detail": "playground.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0001_initial",
        "description": "store.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Customer',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('first_name', models.CharField(max_length=250)),",
        "detail": "store.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0002_alter_order_options",
        "description": "store.migrations.0002_alter_order_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('store', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='order',\n            options={'ordering': ['placed_at']},\n        ),\n    ]",
        "detail": "store.migrations.0002_alter_order_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0003_alter_orderitem_product_alter_product_collection_and_more",
        "description": "store.migrations.0003_alter_orderitem_product_alter_product_collection_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"store\", \"0002_alter_order_options\"),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name=\"orderitem\",\n            name=\"product\",\n            field=models.ForeignKey(\n                on_delete=django.db.models.deletion.PROTECT,",
        "detail": "store.migrations.0003_alter_orderitem_product_alter_product_collection_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "store.migrations.0004_review_date_alter_review_description",
        "description": "store.migrations.0004_review_date_alter_review_description",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"store\", \"0003_alter_orderitem_product_alter_product_collection_and_more\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"review\",\n            name=\"date\",\n            field=models.DateField(\n                auto_now_add=True,",
        "detail": "store.migrations.0004_review_date_alter_review_description",
        "documentation": {}
    },
    {
        "label": "InventoryFilter",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class InventoryFilter(admin.SimpleListFilter):\n    title = 'inventory'\n    parameter_name = 'inventory'\n    def lookups(self, request, model_admin):\n        return [\n            ('<10', 'Low'),\n            ('>=10', 'OK')\n        ]\n    def queryset(self, request, queryset):\n        if self.value() == '<10':",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "ProductAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class ProductAdmin(admin.ModelAdmin):\n    # inlines = [TagInline]\n    prepopulated_fields = {'slug': ('title',)}\n    autocomplete_fields = ['collection']\n    exclude = ['promotions']\n    actions = ['clear_inventory']\n    list_display = ['title', 'unit_price',\n                    'inventory_status', 'collection_title']\n    list_editable = ['unit_price']\n    list_per_page = 10",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "CustomerAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class CustomerAdmin(admin.ModelAdmin):\n    list_display = ['first_name', 'last_name',\n                    'email', 'membership', 'orders_count']\n    list_editable = ['membership']\n    list_per_page = 10\n    ordering = ['first_name', 'last_name']\n    search_fields = ['first_name__istartswith',\n                     'last_name__istartswith', 'email']\n    @admin.display(description='Orders Count')\n    def orders_count(self, customer):",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "OrderItemInline",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class OrderItemInline(admin.TabularInline):\n    # autocomplete_fields = ['product']\n    model = models.OrderItem\n    min_num = 1\n    extra = 0\n    max_num = 10\n@admin.register(models.Order)\nclass OrderAdmin(admin.ModelAdmin):\n    list_display = ['id', 'placed_at', 'customer']\n    inlines = [OrderItemInline]",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class OrderAdmin(admin.ModelAdmin):\n    list_display = ['id', 'placed_at', 'customer']\n    inlines = [OrderItemInline]\n    autocomplete_fields = ['customer']\n# admin.site.register(models.Collection)\n@admin.register(models.Collection)\nclass CollectionAdmin(admin.ModelAdmin):\n    list_display = ['title', 'products_count']\n    search_fields = ['title']\n    @admin.display(ordering='products_count')",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "CollectionAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class CollectionAdmin(admin.ModelAdmin):\n    list_display = ['title', 'products_count']\n    search_fields = ['title']\n    @admin.display(ordering='products_count')\n    def products_count(self, collection):\n        url = (reverse('admin:store_product_changelist')\n               + '?' + urlencode({'collection__id': f'{collection.id}'}))\n        return format_html('<a href=\"{}\">{}</a>', url, collection.products_count)\n        # return collection.products_count\n    def get_queryset(self, request: HttpRequest):",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "CartItemAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class CartItemAdmin(admin.ModelAdmin):\n    # autocomplete_fields = ['product']\n    list_display = ['cart', 'product', 'quantity']\n@admin.register(models.Cart)\nclass CartAdmin(admin.ModelAdmin):\n    # autocomplete_fields = ['product']\n    list_display = ['id', 'created_at']\n# admin.site.register(models.Product, ProductAdmin)\n# admin.site.register(models.Customer)\n# admin.site.register(models.Cart)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "CartAdmin",
        "kind": 6,
        "importPath": "store.admin",
        "description": "store.admin",
        "peekOfCode": "class CartAdmin(admin.ModelAdmin):\n    # autocomplete_fields = ['product']\n    list_display = ['id', 'created_at']\n# admin.site.register(models.Product, ProductAdmin)\n# admin.site.register(models.Customer)\n# admin.site.register(models.Cart)\n# admin.site.register(models.CartItem)\n# admin.site.register(models.Order)\nadmin.site.register(models.OrderItem)\nadmin.site.register(models.Address)",
        "detail": "store.admin",
        "documentation": {}
    },
    {
        "label": "StoreConfig",
        "kind": 6,
        "importPath": "store.apps",
        "description": "store.apps",
        "peekOfCode": "class StoreConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'store'",
        "detail": "store.apps",
        "documentation": {}
    },
    {
        "label": "Promotion",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Promotion(models.Model):\n    description = models.CharField(max_length=255)\n    discount = models.FloatField()\n    # product_set = models.ManyToManyField('Product')\nclass Customer(models.Model):\n    MEMBERSHIP_BRONZE = 'B'\n    MEMBERSHIP_SILVER = 'S'\n    MEMBERSHIP_GOLD = 'G'\n    MEMBERSHIP_CHOICES = [\n        (MEMBERSHIP_BRONZE, 'Bronze'),",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Customer(models.Model):\n    MEMBERSHIP_BRONZE = 'B'\n    MEMBERSHIP_SILVER = 'S'\n    MEMBERSHIP_GOLD = 'G'\n    MEMBERSHIP_CHOICES = [\n        (MEMBERSHIP_BRONZE, 'Bronze'),\n        (MEMBERSHIP_SILVER, 'Silver'),\n        (MEMBERSHIP_GOLD, 'Gold')\n    ]\n    first_name = models.CharField(max_length=250)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Collection",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Collection(models.Model):\n    title = models.CharField(max_length=200)\n    featured_product = models.ForeignKey(\n        'Product', on_delete=models.SET_NULL, null=True, related_name='+'\n    )\n    def __str__(self) -> str:\n        return self.title\n    class Meta:\n        ordering = ['title']\nclass Product(models.Model):",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Product(models.Model):\n    title = models.CharField(max_length=120)\n    slug = models.SlugField()\n    description = models.TextField(blank=True, null=True)\n    unit_price = models.DecimalField(\n        decimal_places=2, max_digits=6, validators=[MinValueValidator(1)])\n    inventory = models.IntegerField()\n    last_update = models.DateTimeField(auto_now=True)\n    collection = models.ForeignKey(\n        Collection, on_delete=models.PROTECT, related_name='products')",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Order(models.Model):\n    PAYMENT_STATUS_PENDING = 'P'\n    PAYMENT_STATUS_COMPLETE = 'C'\n    PAYMENT_STATUS_FAILED = 'F'\n    PAYMENT_STATUS_CHOICES = [\n        (PAYMENT_STATUS_PENDING, 'Pending'),\n        (PAYMENT_STATUS_COMPLETE, 'Complete'),\n        (PAYMENT_STATUS_FAILED, 'Failed')\n    ]\n    placed_at = models.DateTimeField(auto_now_add=True)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class OrderItem(models.Model):\n    order = models.ForeignKey(Order, on_delete=models.PROTECT)\n    product = models.ForeignKey(\n        Product, on_delete=models.PROTECT, related_name='orderitems')\n    quantity = models.PositiveSmallIntegerField()\n    unit_price = models.DecimalField(max_digits=6, decimal_places=2)\nclass Cart(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Cart",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Cart(models.Model):\n    created_at = models.DateTimeField(auto_now_add=True)\nclass CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveSmallIntegerField()\nclass Address(models.Model):\n    street = models.CharField(max_length=250)\n    city = models.CharField(max_length=250)\n    customer = models.OneToOneField(",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CartItem",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class CartItem(models.Model):\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.PositiveSmallIntegerField()\nclass Address(models.Model):\n    street = models.CharField(max_length=250)\n    city = models.CharField(max_length=250)\n    customer = models.OneToOneField(\n        Customer, on_delete=models.CASCADE, primary_key=True)\n    zip = models.CharField(max_length=5)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Address(models.Model):\n    street = models.CharField(max_length=250)\n    city = models.CharField(max_length=250)\n    customer = models.OneToOneField(\n        Customer, on_delete=models.CASCADE, primary_key=True)\n    zip = models.CharField(max_length=5)\nclass Review(models.Model):\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, related_name='reviews')\n    name = models.CharField(max_length=255)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "store.models",
        "description": "store.models",
        "peekOfCode": "class Review(models.Model):\n    product = models.ForeignKey(\n        Product, on_delete=models.CASCADE, related_name='reviews')\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    date = models.DateField(auto_now_add=True)\n    # date = models.DateField(auto_now_add=True)",
        "detail": "store.models",
        "documentation": {}
    },
    {
        "label": "CollectionSerializers",
        "kind": 6,
        "importPath": "store.serializers",
        "description": "store.serializers",
        "peekOfCode": "class CollectionSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = Collection\n        fields = ['id', 'title', 'products_count']\n    # id = serializers.IntegerField()\n    # title = serializers.CharField(max_length=255)\n    products_count = serializers.IntegerField(read_only=True)\n    # def products_count(self, collection: Collection):\n    #     return collection.featured_product.count()\n# class ProductSerializers(serializers.Serializer):",
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ProductSerializers",
        "kind": 6,
        "importPath": "store.serializers",
        "description": "store.serializers",
        "peekOfCode": "class ProductSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = Product\n        # fields = '__all__'\n        fields = ['id', 'title', 'description', 'unit_price',\n                  'slug', 'inventory', 'price_with_tax', 'collection']\n    # id = serializers.IntegerField()\n    # title = serializers.CharField(max_length=255)\n    # price = serializers.DecimalField(\n    #     max_digits=6, decimal_places=2, source='unit_price')",
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "store.serializers",
        "description": "store.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Review\n        fields = ['id', 'date', 'name', 'description']\n    def create(self, validated_data):\n        product_id = self.context['product_id']\n        return Review.objects.create(product_id=product_id, **validated_data)",
        "detail": "store.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "store.urls",
        "description": "store.urls",
        "peekOfCode": "router = routers.DefaultRouter()\nrouter.register('products', views.ProductViewSet, basename='products')\nrouter.register('collections', views.CollectionViewSet)\n# pprint(\n#     router.urls\n# )\nproducts_router = routers.NestedDefaultRouter(\n    router, 'products', lookup='product')\nproducts_router.register('reviews', views.ReviewViewSet,\n                         basename='product-reviews')",
        "detail": "store.urls",
        "documentation": {}
    },
    {
        "label": "products_router",
        "kind": 5,
        "importPath": "store.urls",
        "description": "store.urls",
        "peekOfCode": "products_router = routers.NestedDefaultRouter(\n    router, 'products', lookup='product')\nproducts_router.register('reviews', views.ReviewViewSet,\n                         basename='product-reviews')\n# urlpatterns = [\n#     path('products/', views.product_list, name='product_list'),\n#     path('products/', views.ProductList.as_view(), name='product_list'),\n#     path('products/<int:pk>/', views.ProductDetail.as_view(), name='product_detail'),\n#     path('collections/', views.CollectionList.as_view(), name='collection_list'),\n#     path('collections/<int:pk>/', views.CollectionDetail.as_view(),",
        "detail": "store.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "store.urls",
        "description": "store.urls",
        "peekOfCode": "urlpatterns = [\n    # + products_router.urls\n    path(r'', include(router.urls)),\n    path(r'', include(products_router.urls))\n]",
        "detail": "store.urls",
        "documentation": {}
    },
    {
        "label": "ProductViewSet",
        "kind": 6,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "class ProductViewSet(ModelViewSet):\n    # queryset = Product.objects.select_related('collection').all()\n    serializer_class = ProductSerializers\n    def get_queryset(self):\n        queryset = Product.objects.select_related('collection').all()\n        collection_id = self.request.query_params.get('collection_id')\n        if collection_id is not None:\n            queryset = queryset.filter(collection_id=collection_id)\n        return queryset\n    def get_serializer_context(self):",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "CollectionViewSet",
        "kind": 6,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "class CollectionViewSet(ModelViewSet):\n    queryset = Collection.objects.annotate(\n        products_count=Count('products')).all()\n    serializer_class = CollectionSerializers\n    def delete(self, request, pk):\n        collection = get_object_or_404(Collection.objects.annotate(\n            products_count=Count('products')), pk=pk)\n        if collection.count() > 0:\n            return Response({'error': 'Collection cannot be deleted because it is associated with a product.'}, status=status.HTTP_405_METHOD_NOT_ALLOWED)\n        collection.delete()",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "ReviewViewSet",
        "kind": 6,
        "importPath": "store.views",
        "description": "store.views",
        "peekOfCode": "class ReviewViewSet(ModelViewSet):\n    # queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        return Review.objects.filter(product_id=self.kwargs['product_pk'])\n    def get_serializer_context(self):\n        return {'product_id': self.kwargs['product_pk']}\n# class CollectionList(ListCreateAPIView):\n#     def get_queryset(self):\n#         return Collection.objects.annotate(",
        "detail": "store.views",
        "documentation": {}
    },
    {
        "label": "TagInline",
        "kind": 6,
        "importPath": "store_custome.admin",
        "description": "store_custome.admin",
        "peekOfCode": "class TagInline(GenericTabularInline):\n    autocomplete_fields = ['tag']\n    model = TaggedItem\nclass CustomProductAdmin(ProductAdmin):\n    inlines = [TagInline]\nadmin.site.unregister(Product)\nadmin.site.register(Product, CustomProductAdmin)",
        "detail": "store_custome.admin",
        "documentation": {}
    },
    {
        "label": "CustomProductAdmin",
        "kind": 6,
        "importPath": "store_custome.admin",
        "description": "store_custome.admin",
        "peekOfCode": "class CustomProductAdmin(ProductAdmin):\n    inlines = [TagInline]\nadmin.site.unregister(Product)\nadmin.site.register(Product, CustomProductAdmin)",
        "detail": "store_custome.admin",
        "documentation": {}
    },
    {
        "label": "StoreCustomeConfig",
        "kind": 6,
        "importPath": "store_custome.apps",
        "description": "store_custome.apps",
        "peekOfCode": "class StoreCustomeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'store_custome'",
        "detail": "store_custome.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "storefront.asgi",
        "description": "storefront.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "storefront.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-)_lck!yrz7x^_hj7w303r=cyn1t)*(2=ofvqc^rb1pavzhn7u8'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-)_lck!yrz7x^_hj7w303r=cyn1t)*(2=ofvqc^rb1pavzhn7u8'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \"rest_framework\",",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    \"rest_framework\",\n    \"playground\",\n    \"debug_toolbar\",",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\"\n]",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "ROOT_URLCONF = 'storefront.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "WSGI_APPLICATION = 'storefront.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\nDATABASES = {",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.postgresql',\n        'NAME': 'storefront',\n        'USER': 'postgres',\n        'PASSWORD': 'freedom@12',\n        'HOST': 'localhost',\n        'PORT': '5432',\n    }\n}",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    # ...\n    \"127.0.0.1\",\n    # ...\n]\n# Internationalization\n# https://docs.djangoproject.com/en/5.1/topics/i18n/\nLANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False\n}",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False\n}",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nREST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False\n}",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "storefront.settings",
        "description": "storefront.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'COERCE_DECIMAL_TO_STRING': False\n}",
        "detail": "storefront.settings",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "storefront.urls",
        "description": "storefront.urls",
        "peekOfCode": "admin.site.site_header = \"Storefront Admin\"\nadmin.site.site_title = \"Storefront Admin Portal\"\nadmin.site.index_title = \"Welcome to Storefront\"\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('store/', include('store.urls')),\n    path('__debug__/', include('debug_toolbar.urls')),\n]",
        "detail": "storefront.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "storefront.urls",
        "description": "storefront.urls",
        "peekOfCode": "admin.site.site_title = \"Storefront Admin Portal\"\nadmin.site.index_title = \"Welcome to Storefront\"\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('store/', include('store.urls')),\n    path('__debug__/', include('debug_toolbar.urls')),\n]",
        "detail": "storefront.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "storefront.urls",
        "description": "storefront.urls",
        "peekOfCode": "admin.site.index_title = \"Welcome to Storefront\"\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('store/', include('store.urls')),\n    path('__debug__/', include('debug_toolbar.urls')),\n]",
        "detail": "storefront.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "storefront.urls",
        "description": "storefront.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('store/', include('store.urls')),\n    path('__debug__/', include('debug_toolbar.urls')),\n]",
        "detail": "storefront.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "storefront.wsgi",
        "description": "storefront.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "storefront.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "tags.migrations.0001_initial",
        "description": "tags.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('contenttypes', '0002_remove_content_type_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Tag',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "tags.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "TagAdmin",
        "kind": 6,
        "importPath": "tags.admin",
        "description": "tags.admin",
        "peekOfCode": "class TagAdmin(admin.ModelAdmin):\n    # autocomplete_fields = ['tag']\n    search_fields = ['label']",
        "detail": "tags.admin",
        "documentation": {}
    },
    {
        "label": "TagsConfig",
        "kind": 6,
        "importPath": "tags.apps",
        "description": "tags.apps",
        "peekOfCode": "class TagsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'tags'",
        "detail": "tags.apps",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "tags.models",
        "description": "tags.models",
        "peekOfCode": "class Tag(models.Model):\n    # name = models.CharField(max_length=255)\n    # slug = models.SlugField(unique=True)\n    label = models.CharField(max_length=255, unique=True)\n    def __str__(self):\n        return self.label\nclass TaggedItem(models.Model):\n    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()",
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "TaggedItem",
        "kind": 6,
        "importPath": "tags.models",
        "description": "tags.models",
        "peekOfCode": "class TaggedItem(models.Model):\n    tag = models.ForeignKey(Tag, on_delete=models.CASCADE)\n    content_type = models.ForeignKey(ContentType, on_delete=models.CASCADE)\n    object_id = models.PositiveIntegerField()\n    content_object = GenericForeignKey('content_type', 'object_id')\n    # content_object = GenericForeignKey()",
        "detail": "tags.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'storefront.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]